{"version":3,"sources":["components/Cuadro.jsx","components/Tablero.jsx","App.js","index.js"],"names":["Cuadro","props","style","width","height","className","onClick","accion","id","Tablero","state","win","numberHorizontalPixels","window","innerWidth","numberVerticalPixels","innerHeight","blockSize","Math","floor","gridWidth","gridHeight","round","subPosition","seleccionados","shotsTaken","horizontalTouched","verticalTouched","distance","subHorizontalPosition","subVerticalPosition","numeroCuadros","this","cuadros","i","push","color","disparar","type","location","reload","ubicacionSub","random","row","column","setState","idElemento","includes","distancia","sqrt","pow","iniciarJuego","forEach","cuadro","document","getElementById","indexOf","length","printDebugText","printWin","rellenarTablero","Component","App","ReactDOM","render"],"mappings":"uOAEaA,EAAS,SAACC,GACnB,IAAIC,EAAQ,CACRC,MAAOF,EAAME,MACbC,OAAQH,EAAMG,QAGlB,OACI,qBAAKF,MAAOA,EAAOG,UAAU,SAASC,QAASL,EAAMM,OAAQC,GAAIP,EAAMO,MCN1DC,E,kDACnB,WAAYR,GAAQ,IAAD,6BACjB,cAAMA,IAEDS,MAAQ,CACXC,KAAK,EACLC,uBAAwBC,OAAOC,WAC/BC,qBAAsBF,OAAOG,YAC7BC,UAAWC,KAAKC,MAAMN,OAAOC,WALf,IAMdM,UANc,GAOdC,WAAYH,KAAKC,MACfN,OAAOG,YAAcE,KAAKI,MAAMT,OAAOC,WAR3B,KAUdS,aAAc,EACdC,cAAe,GACfC,WAAY,EACZC,mBAAoB,IACpBC,iBAAkB,IAClBC,SAAU,KACVC,sBAAuB,EACvBC,oBAAqB,GAnBN,E,8DA0BjB,IAHiB,IAAD,OACZC,EAAgBC,KAAKtB,MAAMU,UAAYY,KAAKtB,MAAMW,WAClDY,EAAU,GAFE,WAGPC,GACPD,EAAQE,KACN,cAAC,EAAD,CAEE3B,GAAI0B,EACJE,MAAM,kBACNjC,MAAO,EAAKO,MAAMO,UAAY,KAC9Bb,OAAQ,EAAKM,MAAMO,UAAY,KAC/BV,OAAQ,kBAAM,EAAK8B,SAASH,IAN9B,SAQGA,GAPIA,KAHFA,EAAI,EAAGA,EAAIH,EAAeG,IAAM,EAAhCA,GAcT,OAAOD,I,uCAIP,OACE,qBAAK5B,UAAU,OAAf,SACE,+CACgB2B,KAAKtB,MAAMe,WAD3B,cACkDO,KAAKtB,MAAMkB,SAAU,W,iCAiB3E,OACE,sBAAKvB,UAAU,UAAf,UACE,yCACA,wBAAQiC,KAAK,SAAShC,QAAS,kBAAMO,OAAO0B,SAASC,UAArD,8B,qCAMJ,IAAIT,EAAgBC,KAAKtB,MAAMU,UAAYY,KAAKtB,MAAMW,WAClDoB,EAAevB,KAAKC,MAAMD,KAAKwB,SAAWX,GAE1CY,EAAMzB,KAAKC,MAAMsB,EAAe,IAChCG,EAASH,EAAe,GAE5BT,KAAKa,SAAS,CACZtB,YAAakB,EACbZ,sBAAuBe,EACvBd,oBAAqBa,M,+BAIhBG,GACP,GAAId,KAAKtB,MAAMc,cAAcuB,SAASD,IAAed,KAAKtB,MAAMC,SACzD,CACDmC,IAAed,KAAKtB,MAAMa,aAC5BS,KAAKa,SAAS,CACZlC,KAAK,IAIT,IAAIgC,EAAMzB,KAAKC,MAAM2B,EAAa,IAC9BF,EAASE,EAAa,GACtBE,EAAY9B,KAAKC,MACnBD,KAAK+B,KACH/B,KAAKgC,IAAIlB,KAAKtB,MAAMmB,sBAAwBe,EAAQ,GAClD1B,KAAKgC,IAAIlB,KAAKtB,MAAMoB,oBAAsBa,EAAK,KAGrDX,KAAKa,SAAS,CACZrB,cAAc,GAAD,mBAAMQ,KAAKtB,MAAMc,eAAjB,CAAgCsB,IAC7CrB,WAAYO,KAAKtB,MAAMe,WAAa,EACpCC,kBAAmBkB,EACnBjB,gBAAiBgB,EACjBf,SAAUoB,O,0CAMdhB,KAAKmB,iB,+BAGG,IAAD,OAaP,OAZAnB,KAAKtB,MAAMc,cAAc4B,SAAQ,SAAAlB,GAC/B,IAAImB,EAASC,SAASC,eAAerB,GAEnC,EAAKxB,MAAMc,cAAcgC,QAAQtB,KACjC,EAAKxB,MAAMc,cAAciC,OAAS,EAElCJ,EAAOhD,UAAY,4BAEnBgD,EAAOhD,UAAY,yBAKrB,qCACG2B,KAAK0B,iBACL1B,KAAKtB,MAAMC,IAAMqB,KAAK2B,WAAa,KACpC,qBAAKtD,UAAU,UAAf,SAA0B2B,KAAK4B,2B,GAvIFC,aCChBC,E,uKAGjB,OACE,qBAAKtD,GAAG,aAAR,SACE,cAAC,EAAD,U,GALyBqD,aCCjCE,IAASC,OAAO,cAAC,EAAD,IAASV,SAASC,eAAe,W","file":"static/js/main.13498931.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Cuadro = (props) => {\r\n    let style = {\r\n        width: props.width,\r\n        height: props.height,        \r\n    }\r\n\r\n    return (\r\n        <div style={style} className=\"cuadro\" onClick={props.accion} id={props.id}>\r\n            {/* {props.children} */}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Cuadro } from \"./Cuadro\";\r\n\r\nexport default class Tablero extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let gridWidth = 30;\r\n    this.state = {\r\n      win: false,\r\n      numberHorizontalPixels: window.innerWidth,\r\n      numberVerticalPixels: window.innerHeight,\r\n      blockSize: Math.floor(window.innerWidth / gridWidth),\r\n      gridWidth: gridWidth,\r\n      gridHeight: Math.floor(\r\n        window.innerHeight / Math.round(window.innerWidth / gridWidth)\r\n      ),\r\n      subPosition: -1,\r\n      seleccionados: [],\r\n      shotsTaken: 0,\r\n      horizontalTouched: -100,\r\n      verticalTouched: -100,\r\n      distance: 9999,\r\n      subHorizontalPosition: 0,\r\n      subVerticalPosition: 0\r\n    };\r\n  }\r\n\r\n  rellenarTablero() {\r\n    let numeroCuadros = this.state.gridWidth * this.state.gridHeight;\r\n    let cuadros = [];\r\n    for (let i = 0; i < numeroCuadros; i++) {\r\n      cuadros.push(\r\n        <Cuadro\r\n          key={i}\r\n          id={i}\r\n          color=\"solid 1px black\"\r\n          width={this.state.blockSize + \"px\"}\r\n          height={this.state.blockSize + \"px\"}\r\n          accion={() => this.disparar(i)}\r\n        >\r\n          {i}\r\n        </Cuadro>\r\n      );\r\n    }\r\n    return cuadros;\r\n  }\r\n\r\n  printDebugText() {\r\n    return (\r\n      <div className=\"info\">\r\n        <h1>\r\n          Shots Taken: {this.state.shotsTaken} distance: {this.state.distance}{\" \"}\r\n        </h1>\r\n        {/* <p>win: {String(this.state.win)} </p>\r\n        <p>numberHorizontalPixels: {this.state.numberHorizontalPixels} </p>\r\n        <p>numberVerticalPixels: {this.state.numberVerticalPixels} </p>\r\n        <p>horizontalTouched: {this.state.horizontalTouched} </p>\r\n        <p>verticalTouched: {this.state.verticalTouched} </p>\r\n        <p>subHorizontalPosition: {this.state.subHorizontalPosition} </p>\r\n        <p>subVerticalPosition: {this.state.subVerticalPosition} </p>\r\n        <p>gridWidth: {this.state.gridWidth} </p>\r\n        <p>gridHeight: {this.state.gridHeight} </p>\r\n        <p>blockSize: {this.state.blockSize} </p>         */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  printWin() {\r\n    return (\r\n      <div className=\"ganaste\">\r\n        <h1>GANASTE</h1>\r\n        <button type=\"button\" onClick={() => window.location.reload()}>Nuevo juego</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  iniciarJuego() {\r\n    let numeroCuadros = this.state.gridWidth * this.state.gridHeight;\r\n    let ubicacionSub = Math.floor(Math.random() * numeroCuadros);\r\n\r\n    let row = Math.floor(ubicacionSub / 30);\r\n    let column = ubicacionSub % 30;\r\n\r\n    this.setState({\r\n      subPosition: ubicacionSub,\r\n      subHorizontalPosition: column,\r\n      subVerticalPosition: row\r\n    });\r\n  }\r\n\r\n  disparar(idElemento) {\r\n    if (this.state.seleccionados.includes(idElemento) || this.state.win) {\r\n    } else {\r\n      if (idElemento === this.state.subPosition) {\r\n        this.setState({\r\n          win: true\r\n        });\r\n      }\r\n\r\n      let row = Math.floor(idElemento / 30);\r\n      let column = idElemento % 30;\r\n      let distancia = Math.floor(\r\n        Math.sqrt(\r\n          Math.pow(this.state.subHorizontalPosition - column, 2) +\r\n            Math.pow(this.state.subVerticalPosition - row, 2)\r\n        )\r\n      );\r\n      this.setState({\r\n        seleccionados: [...this.state.seleccionados, idElemento],\r\n        shotsTaken: this.state.shotsTaken + 1,\r\n        horizontalTouched: column,\r\n        verticalTouched: row,\r\n        distance: distancia\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.iniciarJuego();\r\n  }\r\n\r\n  render() {\r\n    this.state.seleccionados.forEach(i => {\r\n      let cuadro = document.getElementById(i);\r\n      if (\r\n        this.state.seleccionados.indexOf(i) ===\r\n        this.state.seleccionados.length - 1\r\n      ) {\r\n        cuadro.className = \"cuadro seleccionadoUltimo\";\r\n      } else {\r\n        cuadro.className = \"cuadro seleccionado\";\r\n      }\r\n    });\r\n\r\n    return (\r\n      <>\r\n        {this.printDebugText()}\r\n        {this.state.win ? this.printWin() : null}\r\n        <div className=\"tablero\">{this.rellenarTablero()}</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport Tablero from \"./components/Tablero\";\r\n\r\nexport default class App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div id=\"contenedor\">\r\n        <Tablero />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}